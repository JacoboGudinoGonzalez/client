import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';


@Injectable()
export class ImpoService{
	public url: string;

	constructor(private _http: HttpClient){
		this.url ="https://aplicacionesc.mat.sat.gob.mx/SOIANET/oia_wfInicioPS.aspx";
	}

	register():Observable<any>{
		
        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')
        const body = new HttpParams().set('__VIEWSTATE','').set('__EVENTVALIDATION','/wEWCgKAj9CUCALRzZzPCwKvtu/vDgLwmKT0CQK9mf7gAQK+mf7gAQK/mf7gAQLAmf7gAQLBmf7gAQLDmf7gAe9F91IhBN1h10BVplGsxFc4ItwZ').set('txtCriterio', '3976').set('cmdBuscar','Buscar');
        return this._http.post(this.url, body.toString(), {headers: headers});
	}
    
}